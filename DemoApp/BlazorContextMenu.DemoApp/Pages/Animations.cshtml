@page "/animations"
@inject IJSRuntime jsRuntime

<h1>Animations</h1>
@{
    var animationsTabItems = new List<TabItem>
    {
        new TabItem
        {
            HeaderText = "Demo",
            Contents = @<div>
                            <label><strong>Select Animation:</strong></label>
                            <select bind="@animation">
                                <option value="@Animation.None">@Animation.None</option>
                                <option value="@Animation.FadeIn">@Animation.FadeIn</option>
                                <option value="@Animation.Grow">@Animation.Grow</option>
                                <option value="@Animation.Slide">@Animation.Slide</option>
                                <option value="@Animation.Zoom">@Animation.Zoom</option>
                            </select>

                            <ContextMenuTrigger MenuId="animationsMenu">
                                <p>Right-click on this text to show the animated context menu</p>
                            </ContextMenuTrigger>
                        </div>
        },
        new TabItem
        {
            HeaderText = "<> Source",
            Contents = @<CodeBlock Title="Razor" Language="html">@animationsCode</CodeBlock> 
        },
    };

    var combinedAnimationsTabItems = new List<TabItem>
    {
        new TabItem
        {
            HeaderText = "Demo",
            Contents = @<ContextMenuTrigger MenuId="animationsMenu2">
                            <p>Right-click on this text to show the animated context menu with different animations per submenu</p>
                        </ContextMenuTrigger>
        },
        new TabItem
        {
            HeaderText = "<> Source",
            Contents = @<CodeBlock Title="Razor" Language="html">@combinedAnimationsCode</CodeBlock> 
        },
    };
}

<TabStrip Title="Build-in animations" TabItems="animationsTabItems" />
<TabStrip Title="You can have different animations for each submenu" TabItems="combinedAnimationsTabItems" />

<ContextMenu Id="animationsMenu" Animation="@animation">
    <Item OnClick="@OnClick">Item 1</Item>
    <Item OnClick="@OnClick">Item 2</Item>
    <Seperator />
    <Item>
        Submenu
        <SubMenu>
            <Item OnClick="@OnClick">Submenu Item 1</Item>
            <Item OnClick="@OnClick">Submenu Item 2</Item>
        </SubMenu>
    </Item>
</ContextMenu>

<ContextMenu Id="animationsMenu2" Animation="@Animation.FadeIn">
    <Item OnClick="@OnClick">Item 1</Item>
    <Item OnClick="@OnClick">Item 2</Item>
    <Seperator />
    <Item>
        Submenu With '@Animation.Zoom'
        <SubMenu Animation="@Animation.Zoom">
            <Item OnClick="@OnClick">Submenu Item 1</Item>
            <Item OnClick="@OnClick">
                Submenu with '@Animation.Slide'
                <SubMenu Animation="@Animation.Slide">
                    <Item OnClick="@OnClick">Subsubmenu Item 1</Item>
                    <Item OnClick="@OnClick">Subsubmenu Item 2</Item>
                </SubMenu>
            </Item>
        </SubMenu>
    </Item>
</ContextMenu>

@functions{
    private BlazorContextMenu.Animation animation = Animation.FadeIn;
    private string animationsCode =
@"<label><strong>Select Animation:</strong></label>
<select bind=""@animation"">
    <option value=""@Animation.None"">@Animation.None</option>
    <option value=""@Animation.FadeIn"">@Animation.FadeIn</option>
    <option value=""@Animation.Grow"">@Animation.Grow</option>
    <option value=""@Animation.Slide"">@Animation.Slide</option>
    <option value=""@Animation.Zoom"">@Animation.Zoom</option>
</select>

<ContextMenuTrigger MenuId=""animationsMenu"">
    <p>Right-click on this text to show the animated context menu</p>
</ContextMenuTrigger>

<ContextMenu Id=""animationsMenu"" Animation=""@animation"">
    <Item OnClick=""@OnClick"">Item 1</Item>
    <Item OnClick=""@OnClick"">Item 2</Item>
    <Seperator />
    <Item>
        Submenu
        <SubMenu>
            <Item OnClick=""@OnClick"">Submenu Item 1</Item>
            <Item OnClick=""@OnClick"">Submenu Item 2</Item>
        </SubMenu>
    </Item>
</ContextMenu>

@functions{
    private BlazorContextMenu.Animation animation = Animation.FadeIn;
    void OnClick(ItemClickEventArgs e)
    {
        Console.WriteLine($""Item Clicked => Menu: {e.ContextMenuId}, MenuTarget: {e.ContextMenuTargetId}, 
                          IsCanceled: {e.IsCanceled}, MenuItem: {e.MenuItemElement}, MouseEvent: {e.MouseEvent}"");
    }
}";

    private string combinedAnimationsCode =
@"<ContextMenu Id=""animationsMenu2"" Animation=""@Animation.FadeIn"">
    <Item OnClick=""@OnClick"">Item 1</Item>
    <Item OnClick=""@OnClick"">Item 2</Item>
    <Seperator />
    <Item>
        Submenu With '@Animation.Zoom'
        <SubMenu Animation=""@Animation.Zoom"">
            <Item OnClick=""@OnClick"">Submenu Item 1</Item>
            <Item OnClick=""@OnClick"">
                Submenu with '@Animation.Slide'
                <SubMenu Animation=""@Animation.Slide"">
                    <Item OnClick=""@OnClick"">Subsubmenu Item 1</Item>
                    <Item OnClick=""@OnClick"">Subsubmenu Item 2</Item>
                </SubMenu>
            </Item>
        </SubMenu>
    </Item>
</ContextMenu>

<ContextMenuTrigger MenuId=""animationsMenu2"">
    <p>Right-click on this text to show the animated context menu with different animations per submenu</p>
</ContextMenuTrigger>

@functions{
    void OnClick(ItemClickEventArgs e)
    {
        Console.WriteLine($""Item Clicked => Menu: {e.ContextMenuId}, MenuTarget: {e.ContextMenuTargetId},
                          IsCanceled: {e.IsCanceled}, MenuItem: {e.MenuItemElement}, MouseEvent: {e.MouseEvent}"");
    }
}";

    void OnClick(ItemClickEventArgs e)
    {
        Console.WriteLine($"Item Clicked => Menu: {e.ContextMenuId}, MenuTarget: {e.ContextMenuTargetId}, IsCanceled: {e.IsCanceled}, MenuItem: {e.MenuItemElement}, MouseEvent: {e.MouseEvent}");
    }

    protected override async Task OnAfterRenderAsync()
    {
        await jsRuntime.InvokeAsync<object>("DemoApp_RunPrism");
    }
}
