@inherits MenuTreeComponent
@inject BlazorContextMenuSettings settings
@inject MenuTreeTraverser menuTreeTraverser

<li id="@Id" class="@ClassCalc" ref="@MenuItemElement">
    <hr class="@HrClassCalc" />
</li>

@functions {


        /// <summary>
        /// Allows you to override the default css class of the menu's li seperator element for full customization.
        /// </summary>
    [Parameter]
    public string OverrideDefaultCssClass { get; protected set; }

    /// <summary>
    /// Allows you to override the default css class of the menu's seperator hr element for full customization.>
    /// </summary>
    [Parameter]
    public string OverrideDefaultHrCssClass { get; protected set; }

    /// <summary>
    /// The id of the li element. This is optional
    /// </summary>
    [Parameter]
    public string Id { get; protected set; }

    /// <summary>
    /// Additional css class for the menu's li seperator element. Use this to extend the default css
    /// </summary>
    [Parameter]
    public string CssClass { get; protected set; }

    /// <summary>
    /// Additional css class for the menu's seperator hr element. Use this to extend the default css
    /// </summary>
    [Parameter]
    public string HrCssClass { get; protected set; }



    protected ElementRef MenuItemElement { get; set; }
    protected string Template { get; set; }

    protected string ClassCalc
    {
        get
        {
            var template = settings.GetTemplate(Template);
            return Helpers.AppendCssClasses(
                (OverrideDefaultCssClass ?? template.DefaultCssOverrides.SeperatorCssClass),
                (CssClass ?? settings.GetTemplate(Template).SeperatorCssClass));
        }
    }

    protected string HrClassCalc
    {
        get
        {
            var template = settings.GetTemplate(Template);
            return Helpers.AppendCssClasses(
               (OverrideDefaultHrCssClass ?? template.DefaultCssOverrides.SeperatorHrCssClass),
               (HrCssClass ?? settings.GetTemplate(Template).SeperatorHrCssClass));
        }
    }

    protected override void OnInit()
    {
        base.OnInit();

        var rootMenu = menuTreeTraverser.GetRootContextMenu(this);
        if (rootMenu == null)
        {
            throw new Exception("Seperator component must be a child of a ContextMenu component");
        }
        var parentMenu = menuTreeTraverser.GetClosestContextMenu(this);
        Template = parentMenu.GetActiveTemplate();
    }
}