<li id="@Id" class="blazor-context-submenu-item @ClassCalc" onmouseover="blazorContextMenu.OnSubMenuItemMouseOver(event, @XOffset, this);" onmouseout="blazorContextMenu.OnSubMenuItemMouseOut(event);">
    @ChildContent
</li>

@functions{

    /// <summary>
    /// The id of the li element. This is optional
    /// </summary>
    public string Id { get; set; }

    /// <summary>
    /// Allows you to override the default css class of the menu's li element for full customization.
    /// If you want to override this for all menus, then you could use <see cref="BlazorContextMenuDefaults.DefaultMenuItemCssClass"/>
    /// </summary>
    public string OverrideDefaultCssClass { get; set; }

    /// <summary>
    /// Allows you to override the default x position offset of the submenu (the distance of the submenu from it's parent menu).
    /// If you want to override this for all menus, then you could use <see cref="BlazorContextMenuDefaults.SubMenuXPositionPixelsOffset"/>
    /// </summary>
    public int XOffset { get; set; } = BlazorContextMenuDefaults.SubMenuXPositionPixelsOffset;

    /// <summary>
    /// Additional css class for the menu's li element. Use this to extend the default css
    /// </summary>
    public string CssClass { get; set; }


    public RenderFragment ChildContent { get; set; }
    protected string ClassCalc => (OverrideDefaultCssClass == null ? BlazorContextMenuDefaults.DefaultMenuItemCssClass : OverrideDefaultCssClass) + (CssClass == null ? "" : $" {CssClass}");
}