<li id="@Id" ref="MenuItemElement" onclick="@( (e) => OnClickInternal(e))" class="@ClassCalc">
    @ChildContent
</li>

@functions {
    private const string DefaultCssClass = "blazor-context-menu__item";
    private const string DefaultDisabledCssClass = "blazor-context-menu__item--disabled";

    public string ReplaceDefaultCssClass { get; set; }
    public string CssClass { get; set; }
    public string ReplaceDefaultDisabledCssClass { get; set; }
    public string DisabledCssClass { get; set; }
    public RenderFragment ChildContent { get; set; }
    public Action<MenuItemEventArgs> Click { get; set; }
    public Func<MenuItemEventArgs, Task> ClickAsync { get; set; }
    protected ElementRef MenuItemElement { get; set; }
    public bool IsEnabled { get; set; } = true;
    public string Id { get; set; }
    protected string ClassCalc
    {
        get
        {
            if (IsEnabled)
            {
                return (ReplaceDefaultCssClass == null ? DefaultCssClass : ReplaceDefaultCssClass) + (CssClass == null ? "" : $" {CssClass}");
            }
            else
            {
                return (ReplaceDefaultDisabledCssClass == null ? DefaultDisabledCssClass : ReplaceDefaultDisabledCssClass) + (DisabledCssClass == null ? "" : $" {DisabledCssClass}");
            }
        }
    }

    protected void OnClickInternal(UIMouseEventArgs e)
    {
        if (!this.IsEnabled)
        {
            return;
        }

        var menuId = RegisteredFunction.Invoke<string>("BlazorContextMenu.MenuItem.GetMenuId", MenuItemElement);
        var menu = BlazorContextMenuHandler.GetMenu(menuId);
        var contextMenuTarget = menu.GetTarget();
        var args = new MenuItemEventArgs(e, menuId, contextMenuTarget, MenuItemElement);
        if (Click != null)
        {
            Click(args);
            if (!args.IsCanceled)
            {
                BlazorContextMenuHandler.HideMenu(menuId);
            }
        }

        if (ClickAsync != null)
        {
            ClickAsync(args).ContinueWith((t) =>
            {
                if (!args.IsCanceled)
                {
                    BlazorContextMenuHandler.HideMenu(menuId);
                }
            });
        }
    }
}